//task compile << {
//	println "compling source"
//}

//task compileTest (dependsOn: compile) << {
//	println "compling unit tests"
//}

//task test(dependsOn: [compile,compileTest]) << {
//	println "running unit tests"
//}

//task dist(dependsOn: [compile,test]) << {
//	println "building the distribution"
//}

//description = "this is a test "

//task check <<{
//	println name
//	println project.name
//}

//定义一个局部变量 其只在声明它的地方可见
def dest = "dest"

task copy(type : Copy){
	from "source"
	into dest
}

//使用扩展属性
apply plugin:"java"
//使用 ext 扩展块可以一次添加多个属性.
ext{
	springVersion="3.1.0.RELEASE"
	emailNotification="1358158760@qq.com"
}

sourceSets.all{
	ext.purpose=null
}

sourceSets{
	main{
		purpose="production"
	}
	test{
		purpose="test"
	}
	plugin{
		purpose="production"
	}
}

task printProperties << {
	println springVersion
	println emailNotification
	sourceSets.matching{
		it.purpose=="production"
	}.each{
		println it.name
	}
}

//一个 ext 扩展块向 Project 对象添加了两个扩展属性. 名为 perpose 的属性被添加到每个 source set，然后设置 ext.purpose 等于 null ( null值是被允许的 ). 当这些扩展属性被添加后，
//它们就像预定义的属性一样可以被读取，更改值.
//例子中我们通过一个特殊的语句添加扩展属性，当您试图设置一个预定义属性或者扩展属性，但是属性名拼写错误或者并不存在时，操作就会失败. Project 对象可以在任何地方使用其扩展属性 ，
//它们比局部变量有更大的作用域. 一个项目的扩展属性对其子项目也可见.
